apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --out ./deploy/ -f docker-compose.yml -f ./deploy/docker-compose.override.yml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --out ./deploy/ -f docker-compose.yml -f ./deploy/docker-compose.override.yml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/whatup-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - image: postgres:15-alpine
          name: db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /run/secrets/postgres-passwd
              name: postgres-passwd
            - mountPath: /var/lib/postgresql/data
              name: db-files
            - mountPath: /docker-entrypoint-initdb.d/postgres-multi-databases.sh
              name: db-claim1
      restartPolicy: Always
      volumes:
        - name: postgres-passwd
          secret:
            items:
              - key: postgres-passwd
                path: postgres-passwd
            secretName: postgres-passwd
        - name: db-files
          persistentVolumeClaim:
            claimName: db-files
        - name: db-claim1
          persistentVolumeClaim:
            claimName: db-claim1
status: {}
