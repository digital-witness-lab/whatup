plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2' // Add the Shadow plugin
}

group 'org.digitalwitnesslab.photocop'
version '0.0.1'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-netty-shaded:1.42.1'
    implementation 'io.grpc:grpc-protobuf:1.42.1'
    implementation 'io.grpc:grpc-stub:1.42.1'
    implementation 'com.google.protobuf:protobuf-java:3.19.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation files('contrib/PDNAClientHash-1.0.1.jar')
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.19.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.42.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'build/generated/source/proto/main/java', 'build/generated/source/proto/main/grpc'
        }
        proto {
            srcDir 'src/main/proto'
        }
    }
}

compileJava.dependsOn 'generateProto'

tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.digitalwitnesslab.photocop.Server'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.digitalwitnesslab.photocop.Server'
        )
    }
}

shadowJar {
    archiveBaseName.set('photocop')
    archiveVersion.set(version)
    archiveClassifier.set('')
    manifest {
        attributes(
                'Main-Class': 'org.digitalwitnesslab.photocop.Server'
        )
    }
    mergeServiceFiles()
}

build.dependsOn shadowJar
